- name: Regular maintance
  hosts: all
  become: true
  tasks:
    - name: Upgrade all packages after updating the apt cache.
      ansible.builtin.apt:
        update_cache: true
        upgrade: true
      register: apt_upgrade

    - name: List installed and updated packages I # noqa no-changed-when
      ansible.builtin.shell: |
        set -o pipefail
        grep -E "^$(date +%Y-%m-%d).+ (install|upgrade) " /var/log/dpkg.log |cut -d " " -f 3-5
      register: result
      when: apt_upgrade.changed # noqa: no-handler
      failed_when: apt_upgrade.rc not in [0, 1]  # Allow exit codes 0 (matches found) and 1 (no matches)

    - name: List upgraded packages II # noqa no-changed-when
      ansible.builtin.debug:
        msg: "{{ result.stdout_lines }}"
      when: apt_upgrade.changed # noqa: no-handler
      failed_when: apt_upgrade.rc not in [0, 1]  # Allow exit codes 0 (matches found) and 1 (no matches)

    - name: Remove unused dependency packages
      ansible.builtin.apt:
        autoremove: true
      register: dependancy_clean

    - name: Search DPGK for removed packages I # noqa no-changed-when
      ansible.builtin.shell: |
        set -o pipefail
        grep -E "^$(date +%Y-%m-%d).+ (remove) " /var/log/dpkg.log |cut -d " " -f 3-5
      register: result
      when: dependancy_clean.changed # noqa: no-handler

    - name: List removed packages II # noqa no-changed-when
      ansible.builtin.debug:
        msg: "{{ result.stdout_lines }}"
      when: dependancy_clean.changed # noqa: no-handler

    - name: Getting host information
      ansible.builtin.debug:
        msg: "{{ ansible_hostname }} running {{ ansible_distribution }} > {{ ansible_distribution_version }}"

    - name: Check Shell # noqa no-changed-when
      ansible.builtin.shell:
        echo $SHELL
      register: shell_output

    - name: Print Shell Information
      ansible.builtin.debug:
        msg: "The current shell is {{ shell_output.stdout }}"
